{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Downloads\\\\React-Movie-App-main\\\\React-Movie-App-main\\\\src\\\\pages\\\\Movies\\\\Movies.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Pagination2 from \"../../components/Pagination/Pagination\";\nimport LocalSearch from \"../../components/Search/LocalSearch\";\nimport SingleData from \"../../components/SingleData/SingleData\";\nimport Myloader from \"react-spinners/PuffLoader\";\nimport Genre from \"../../components/Genres/Genre\";\nimport useGenre from \"../../components/Genres/UseGenre\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  const [treadingContent, setTreadingContent] = useState([]);\n  const [page, setPage] = useState(1);\n  const [numOfPages, setNumOfPages] = useState();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [filterGenre, setFilterGenre] = useState([]);\n  const [genreTitle, setGenreTitle] = useState();\n  // eslint-disable-next-line\n  const [color, setColor] = useState(\"grey\");\n  const genreforURL = useGenre(filterGenre);\n\n  // fetch Movies from TMDB\n  const fetchMovieApi = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(` \n      https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&page=${page}&language=en-US&sort_by=popularity.desc&with_genres=${genreforURL}\n      `);\n      setTreadingContent(data.results);\n      setNumOfPages(100);\n      setIsLoading(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const fetchSearchApi = async () => {\n    if (searchTerm) {\n      const SEARCH_API = `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_API_KEY}&query=${searchTerm}&page=${page}&sort_by=popularity.desc&page=2`;\n      const {\n        data\n      } = await axios.get(SEARCH_API);\n      setTreadingContent(data.results);\n      setNumOfPages(data.total_pages);\n      setIsLoading(true);\n    }\n  };\n  useEffect(() => {\n    window.scroll(0, 0);\n    if (searchTerm) {\n      fetchSearchApi();\n    } else {\n      fetchMovieApi();\n    }\n    return () => {\n      setTreadingContent();\n    };\n    // eslint-disable-next-line\n  }, [page, isLoading, genreforURL]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"all__movies\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my__main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TreadingHome\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [genreTitle && genreTitle.name, \" Movies:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LocalSearch, {\n          setSearchTerm: setSearchTerm,\n          searchTerm: searchTerm,\n          fetchSearchApi: fetchSearchApi,\n          numOfpages: numOfPages,\n          setIsLoading: setIsLoading,\n          media: \"movies\",\n          placehold: \"Search Movies\",\n          isLoading: isLoading,\n          treadingContent: treadingContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sec__main \",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"all_genres \",\n          children: /*#__PURE__*/_jsxDEV(Genre, {\n            media: \"movie\",\n            setFilterGenre: setFilterGenre,\n            filterGenre: filterGenre,\n            setTreadingContent: setTreadingContent,\n            setPage: setPage,\n            numOfpages: numOfPages,\n            page: page,\n            genreTitle: genreTitle,\n            setGenreTitle: setGenreTitle,\n            treadingContent: treadingContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pag  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ListContent\",\n        children: isLoading && treadingContent ? treadingContent.map(n => /*#__PURE__*/_jsxDEV(SingleData, {\n          ...n,\n          mediaType: \"movie\"\n        }, n.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading  \",\n          style: {\n            display: \"flex\",\n            height: \"450px\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Myloader, {\n            color: color,\n            size: 60\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"grey\",\n              fontSize: \"13px\",\n              marginLeft: \"10px\",\n              marginTop: \"10px\"\n            },\n            children: \"fetching data ...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination2, {\n        setPage: setPage,\n        numOfPages: numOfPages,\n        media: \"movies\",\n        searchTerm: searchTerm,\n        setIsLoading: setIsLoading,\n        page: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Movies, \"vDdHB0mYpA0z9QJh7lM125xp1TU=\", false, function () {\n  return [useGenre];\n});\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["axios","useEffect","useState","Pagination2","LocalSearch","SingleData","Myloader","Genre","useGenre","Movies","treadingContent","setTreadingContent","page","setPage","numOfPages","setNumOfPages","searchTerm","setSearchTerm","isLoading","setIsLoading","filterGenre","setFilterGenre","genreTitle","setGenreTitle","color","setColor","genreforURL","fetchMovieApi","data","get","process","env","REACT_APP_API_KEY","results","error","console","log","fetchSearchApi","SEARCH_API","total_pages","window","scroll","name","map","n","id","display","height","justifyContent","alignItems","fontSize","marginLeft","marginTop"],"sources":["C:/Users/Dell/Downloads/React-Movie-App-main/React-Movie-App-main/src/pages/Movies/Movies.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Pagination2 from \"../../components/Pagination/Pagination\";\nimport LocalSearch from \"../../components/Search/LocalSearch\";\nimport SingleData from \"../../components/SingleData/SingleData\";\nimport Myloader from \"react-spinners/PuffLoader\";\nimport Genre from \"../../components/Genres/Genre\";\nimport useGenre from \"../../components/Genres/UseGenre\";\n\nconst Movies = () => {\n  const [treadingContent, setTreadingContent] = useState([]);\n  const [page, setPage] = useState(1);\n  const [numOfPages, setNumOfPages] = useState();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [filterGenre, setFilterGenre] = useState([]);\n  const [genreTitle, setGenreTitle] = useState();\n  // eslint-disable-next-line\n  const [color, setColor] = useState(\"grey\");\n  const genreforURL = useGenre(filterGenre);\n\n  // fetch Movies from TMDB\n  const fetchMovieApi = async () => {\n    try {\n      const { data } = await axios.get(\n        ` \n      https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&page=${page}&language=en-US&sort_by=popularity.desc&with_genres=${genreforURL}\n      `\n      );\n      setTreadingContent(data.results);\n      setNumOfPages(100);\n      setIsLoading(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchSearchApi = async () => {\n    if (searchTerm) {\n      const SEARCH_API = `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_API_KEY}&query=${searchTerm}&page=${page}&sort_by=popularity.desc&page=2`;\n      const { data } = await axios.get(SEARCH_API);\n      setTreadingContent(data.results);\n      setNumOfPages(data.total_pages);\n      setIsLoading(true);\n    }\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    if (searchTerm) {\n      fetchSearchApi();\n    } else {\n      fetchMovieApi();\n    }\n    return () => {\n      setTreadingContent();\n    };\n    // eslint-disable-next-line\n  }, [page, isLoading, genreforURL]);\n\n  return (\n    <>\n      <main className=\"all__movies\">\n        <div className=\"my__main\">\n          <div className=\"TreadingHome\">\n            <h3>{genreTitle && genreTitle.name} Movies:</h3>\n          </div>\n          <LocalSearch\n            setSearchTerm={setSearchTerm}\n            searchTerm={searchTerm}\n            fetchSearchApi={fetchSearchApi}\n            numOfpages={numOfPages}\n            setIsLoading={setIsLoading}\n            media=\"movies\"\n            placehold=\"Search Movies\"\n            isLoading={isLoading}\n            treadingContent={treadingContent}\n          />\n        </div>\n        <div className=\"sec__main \">\n          <span className=\"all_genres \">\n            <Genre\n              media=\"movie\"\n              setFilterGenre={setFilterGenre}\n              filterGenre={filterGenre}\n              setTreadingContent={setTreadingContent}\n              setPage={setPage}\n              numOfpages={numOfPages}\n              page={page}\n              genreTitle={genreTitle}\n              setGenreTitle={setGenreTitle}\n              treadingContent={treadingContent}\n            />\n          </span>\n          <div className=\"pag  \">\n            {/* <Pagination2\n              setPage={setPage}\n              numOfPages={numOfPages}\n              media=\"movies\"\n              page={page}\n              setIsLoading={setIsLoading}\n              searchTerm={searchTerm}\n              style={{ marginBottom: \"10px\" }}\n            /> */}\n          </div>\n        </div>\n\n        <div className=\"ListContent\">\n          {isLoading && treadingContent ? (\n            treadingContent.map((n) => (\n              <SingleData key={n.id} {...n} mediaType=\"movie\" />\n            ))\n          ) : (\n            <div\n              className=\"loading  \"\n              style={{\n                display: \"flex\",\n                height: \"450px\",\n\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Myloader color={color} size={60} />\n              <p\n                style={{\n                  color: \"grey\",\n                  fontSize: \"13px\",\n                  marginLeft: \"10px\",\n                  marginTop: \"10px\",\n                }}\n              >\n                fetching data ...\n              </p>\n            </div>\n          )}\n        </div>\n        <Pagination2\n          setPage={setPage}\n          numOfPages={numOfPages}\n          media=\"movies\"\n          searchTerm={searchTerm}\n          setIsLoading={setIsLoading}\n          page={page}\n        />\n      </main>\n    </>\n  );\n};\n\nexport default Movies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}