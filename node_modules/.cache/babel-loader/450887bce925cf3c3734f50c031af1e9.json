{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Downloads\\\\React-Movie-App-main\\\\React-Movie-App-main\\\\src\\\\components\\\\Genres\\\\Genre.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport \"./Genres.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Genre = _ref => {\n  _s();\n\n  let {\n    media,\n    setFilterGenre,\n    setPage,\n    genreTitle,\n    setGenreTitle,\n    setTreadingContent,\n    treadingContent,\n    handleRedirect\n  } = _ref;\n  const [getGenre, setGetGenre] = useState([]);\n  const navigate = useHistory(); // let location = useLocation();\n\n  const fetchGenres = async () => {\n    try {\n      if (media) {\n        const {\n          data\n        } = await axios.get(`https://api.themoviedb.org/3/genre/${media}/list?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`); // eslint-disable-next-line\n\n        setGetGenre(data.genres);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleFilter = genre => {\n    setFilterGenre([genre]);\n    setPage(1);\n    setGenreTitle(genre);\n\n    if (media === \"tv\") {\n      navigate.push(`/${media}=series${genre.id}-Category`);\n    } else if (media === \"movie\") {\n      navigate.push(`/${media}-${genre.name}-Category`);\n    } else if (!media) {\n      navigate.push(\"/all-movies\");\n    }\n  };\n\n  useEffect(() => {\n    fetchGenres();\n    return () => {\n      setGetGenre();\n    }; // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      style: {\n        position: \"relative \"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn btn-secondary dropdown-toggle mybtn\",\n        to: \"#\",\n        role: \"button\",\n        id: \"dropdownMenuLink\",\n        \"data-toggle\": \"dropdown\",\n        \"aria-expanded\": \"false\",\n        children: [\"Filter By:\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-menu\",\n        \"aria-labelledby\": \"dropdownMenuLink\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title__genre\",\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category__content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"dropdown-item3\",\n            onClick: handleFilter,\n            children: [\"all \", media === \"movie\" ? \"Movies\" : \"Tv series\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), getGenre && getGenre.map(genre => /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: () => handleFilter(genre),\n            className: \"dropdown-item2\",\n            children: genre.name\n          }, genre.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Genre, \"vP5DikhIQ2uZ27iAjRAQ6uz6qac=\", false, function () {\n  return [useHistory];\n});\n\n_c = Genre;\nexport default Genre;\n\nvar _c;\n\n$RefreshReg$(_c, \"Genre\");","map":{"version":3,"sources":["C:/Users/Dell/Downloads/React-Movie-App-main/React-Movie-App-main/src/components/Genres/Genre.js"],"names":["axios","React","useEffect","useState","useHistory","Link","Genre","media","setFilterGenre","setPage","genreTitle","setGenreTitle","setTreadingContent","treadingContent","handleRedirect","getGenre","setGetGenre","navigate","fetchGenres","data","get","process","env","REACT_APP_API_KEY","genres","e","console","log","handleFilter","genre","push","id","name","position","map"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport \"./Genres.css\";\n\nconst Genre = ({\n  media,\n  setFilterGenre,\n  setPage,\n  genreTitle,\n  setGenreTitle,\n  setTreadingContent,\n  treadingContent,\n  handleRedirect,\n}) => {\n  const [getGenre, setGetGenre] = useState([]);\n  const navigate = useHistory();\n  // let location = useLocation();\n\n  const fetchGenres = async () => {\n    try {\n      if (media) {\n        const { data } = await axios.get(\n          `https://api.themoviedb.org/3/genre/${media}/list?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n        );\n        // eslint-disable-next-line\n        setGetGenre(data.genres);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleFilter = (genre) => {\n    setFilterGenre([genre]);\n    setPage(1);\n    setGenreTitle(genre);\n    if (media === \"tv\") {\n      navigate.push(`/${media}=series${genre.id}-Category`);\n    } else if (media === \"movie\") {\n      navigate.push(`/${media}-${genre.name}-Category`);\n    } else if (!media) {\n      navigate.push(\"/all-movies\");\n    }\n  };\n\n  useEffect(() => {\n    fetchGenres();\n    return () => {\n      setGetGenre();\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <div className=\"dropdown\" style={{ position: \"relative \" }}>\n        <Link\n          className=\"btn btn-secondary dropdown-toggle mybtn\"\n          to=\"#\"\n          role=\"button\"\n          id=\"dropdownMenuLink\"\n          data-toggle=\"dropdown\"\n          aria-expanded=\"false\"\n        >\n          Filter By:{\" \"}\n        </Link>\n\n        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n          <div className=\"title__genre\">Categories</div>\n\n          <div className=\"category__content\">\n            <p className=\"dropdown-item3\" onClick={handleFilter}>\n              all {media === \"movie\" ? \"Movies\" : \"Tv series\"}\n            </p>\n            {getGenre &&\n              getGenre.map((genre) => (\n                <p\n                  key={genre.id}\n                  onClick={() => handleFilter(genre)}\n                  className=\"dropdown-item2\"\n                >\n                  {genre.name}\n                </p>\n              ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Genre;\n"]},"metadata":{},"sourceType":"module"}