{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Downloads\\\\React-Movie-App-main\\\\React-Movie-App-main\\\\src\\\\components\\\\SingleContentPage\\\\SinglePage.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { img_300, img_500, unavailable } from \"../../api/config/DefaultImages\";\nimport SingleData from \"../SingleData/SingleData\";\nimport \"./SinglePage.css\";\nimport SingleVideoPage from \"./SingleVideoPage\";\nimport Myloader from \"react-spinners/ClipLoader\";\nimport Carousel from \"../Carousel/Carousel\";\nimport $ from \"jquery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SinglePage = () => {\n  _s();\n\n  $(function () {\n    $(\".ico\").on(\"click\", function () {\n      $(\".ico\").toggleClass(\"press\", 1000);\n    });\n  });\n  const [content, setContent] = useState();\n  const [similarMovies, setSimilarMovies] = useState();\n  const [video, setVideo] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [color, setColor] = useState(\"grey\");\n  const history = useHistory();\n  const {\n    id,\n    mediaType\n  } = useParams();\n\n  const fetchData = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(` \n      https://api.themoviedb.org/3/${mediaType}/${id}?api_key=${process.env.REACT_APP_API_KEY}&page=1`);\n      setContent(data);\n      setIsLoading(true);\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        history.replace(\"/error\");\n      }\n    }\n  };\n\n  const fetchSimilarMovies = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(` \n     https://api.themoviedb.org/3/${mediaType}/${id}/similar?api_key=${process.env.REACT_APP_API_KEY}`);\n      const dataSlice = data.results;\n      const filter = dataSlice.slice(0, 7);\n      setSimilarMovies(filter);\n      setIsLoading(true);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchVideos = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(` \n     https://api.themoviedb.org/3/${mediaType}/${id}/videos?api_key=${process.env.REACT_APP_API_KEY}`);\n      setVideo(data.results[0].key);\n      setIsLoading(true);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchData();\n    fetchSimilarMovies();\n    fetchVideos();\n  }, [id, setContent]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: content && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"open__modal\",\n          style: {\n            backgroundImage: `url( https://www.themoviedb.org/t/p/w1920_and_h800_multi_faces/${content.backdrop_path})`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"poster__img\",\n            src: content.poster_path ? `${img_300}/${content.poster_path}` : unavailable,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"backdrop__img\",\n            src: content.backdrop_path ? `${img_500}/${content.backdrop_path}` : unavailable,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"open__detailsPage\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: content.original_title || content.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                zIndex: \"1000\",\n                marginTop: \"10px\",\n                textAlign: \"left\"\n              },\n              className: \"year\",\n              children: [(content.first_air_date || content.release_date || \"-----\").substring(0, 4), \" \", \".\", /*#__PURE__*/_jsxDEV(\"b\", {\n                className: \"title_me\",\n                children: mediaType === \"tv\" ? \"Tv Series .\" : \"Movie .\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                className: \"vote_back\",\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  className: \"tmdb\",\n                  children: \"TMDB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                  className: \"vote_ave\",\n                  children: [\"-\\u2B50\", content.vote_average]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                display: \"flex\",\n                fontSize: \"12px\"\n              },\n              className: \"genreList\",\n              children: content.genres.map((n, i) => {\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: \"13px\",\n                    marginLeft: \"6px\"\n                  },\n                  className: \"mygenre\",\n                  children: [i > 0 && \", \", n.name]\n                }, n.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"videopage\",\n              children: content && /*#__PURE__*/_jsxDEV(SingleVideoPage, {\n                trailer: video,\n                title: content.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tagline\",\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: content.tagline\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overview\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: content.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"other_lists\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"DURATION:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: mediaType === \"tv\" ? `${content.episode_run_time[0]} min episodes` : `${content.runtime} min`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 23\n                }, this), mediaType === \"tv\" ? /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"SEASONS: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: content.number_of_seasons\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 36\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 25\n                }, this) : \"\", /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"STUDIO:\", content.production_companies.map((studio, i) => {\n                    return /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\" \", i > 0 && \",  \", studio.name]\n                    }, studio.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 29\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 23\n                }, this), mediaType === \"movie\" ? /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"RELEASE DATE: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: content.release_date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 25\n                }, this) : \"\", /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"STATUS: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: content.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all__cast px-5 pt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cast__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Cast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Carousel, {\n            mediaType: mediaType,\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"similar__shows\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"You May Also Like \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"similar\",\n          children: similarMovies && similarMovies.map(n => /*#__PURE__*/_jsxDEV(SingleData, { ...n,\n            mediaType: \"movie\"\n          }, n.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"load_app\",\n      style: {\n        height: \"500px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Myloader, {\n        color: color,\n        size: 60\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"pt-4 text-secondary text-loading\",\n        style: {\n          textTransform: \"capitalize\",\n          fontSize: \"1rem\"\n        },\n        children: \"Loading Please Wait...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(SinglePage, \"oHmvmP/De7QdClolrn3wx4DD+0Q=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = SinglePage;\nexport default SinglePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePage\");","map":{"version":3,"sources":["C:/Users/Dell/Downloads/React-Movie-App-main/React-Movie-App-main/src/components/SingleContentPage/SinglePage.jsx"],"names":["axios","React","useEffect","useState","useHistory","useParams","img_300","img_500","unavailable","SingleData","SingleVideoPage","Myloader","Carousel","$","SinglePage","on","toggleClass","content","setContent","similarMovies","setSimilarMovies","video","setVideo","isLoading","setIsLoading","color","setColor","history","id","mediaType","fetchData","data","get","process","env","REACT_APP_API_KEY","error","response","status","replace","fetchSimilarMovies","dataSlice","results","filter","slice","console","fetchVideos","key","window","scroll","backgroundImage","backdrop_path","poster_path","original_title","name","zIndex","marginTop","textAlign","first_air_date","release_date","substring","vote_average","display","fontSize","genres","map","n","i","marginLeft","title","tagline","overview","episode_run_time","runtime","number_of_seasons","production_companies","studio","height","textTransform"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { img_300, img_500, unavailable } from \"../../api/config/DefaultImages\";\nimport SingleData from \"../SingleData/SingleData\";\nimport \"./SinglePage.css\";\nimport SingleVideoPage from \"./SingleVideoPage\";\nimport Myloader from \"react-spinners/ClipLoader\";\n\nimport Carousel from \"../Carousel/Carousel\";\nimport $ from \"jquery\";\n\nconst SinglePage = () => {\n  $(function () {\n    $(\".ico\").on(\"click\", function () {\n      $(\".ico\").toggleClass(\"press\", 1000);\n    });\n  });\n  const [content, setContent] = useState();\n  const [similarMovies, setSimilarMovies] = useState();\n  const [video, setVideo] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [color, setColor] = useState(\"grey\");\n  const history = useHistory();\n  const { id, mediaType } = useParams();\n\n  const fetchData = async () => {\n    try {\n      const { data } = await axios.get(` \n      https://api.themoviedb.org/3/${mediaType}/${id}?api_key=${process.env.REACT_APP_API_KEY}&page=1`);\n      setContent(data);\n      setIsLoading(true);\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        history.replace(\"/error\");\n      }\n    }\n  };\n  const fetchSimilarMovies = async () => {\n    try {\n      const { data } = await axios.get(` \n     https://api.themoviedb.org/3/${mediaType}/${id}/similar?api_key=${process.env.REACT_APP_API_KEY}`);\n      const dataSlice = data.results;\n      const filter = dataSlice.slice(0, 7);\n      setSimilarMovies(filter);\n      setIsLoading(true);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchVideos = async () => {\n    try {\n      const { data } = await axios.get(` \n     https://api.themoviedb.org/3/${mediaType}/${id}/videos?api_key=${process.env.REACT_APP_API_KEY}`);\n\n      setVideo(data.results[0].key);\n      setIsLoading(true);\n\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    window.scroll(0, 0);\n\n    fetchData();\n    fetchSimilarMovies();\n    fetchVideos();\n\n  }, [id, setContent]);\n  return (\n    <>\n      {isLoading ? (\n        <>\n          <div>\n            {content && (\n              <div\n                className=\"open__modal\"\n                style={{\n                  backgroundImage: `url( https://www.themoviedb.org/t/p/w1920_and_h800_multi_faces/${content.backdrop_path})`,\n                }}\n              >\n                <img\n                  className=\"poster__img\"\n                  src={\n                    content.poster_path\n                      ? `${img_300}/${content.poster_path}`\n                      : unavailable\n                  }\n                  alt=\"\"\n                />\n                <img\n                  className=\"backdrop__img\"\n                  src={\n                    content.backdrop_path\n                      ? `${img_500}/${content.backdrop_path}`\n                      : unavailable\n                  }\n                  alt=\"\"\n                />\n\n                <div className=\"open__detailsPage\">\n                  <h3>{content.original_title || content.name}</h3>\n                  <div\n                    style={{\n                      zIndex: \"1000\",\n                      marginTop: \"10px\",\n                      textAlign: \"left\",\n                    }}\n                    className=\"year\"\n                  >\n                    {(\n                      content.first_air_date ||\n                      content.release_date ||\n                      \"-----\"\n                    ).substring(0, 4)}{\" \"}\n                    .\n                    <b className=\"title_me\">\n                      {mediaType === \"tv\" ? \"Tv Series .\" : \"Movie .\"}\n                    </b>\n                    <b className=\"vote_back\">\n                      <b className=\"tmdb\">TMDB</b>\n                      <b className=\"vote_ave\">-⭐{content.vote_average}</b>\n                    </b>\n                  </div>\n                  <h5\n                    style={{\n                      display: \"flex\",\n                      fontSize: \"12px\",\n                    }}\n                    className=\"genreList\"\n                  >\n                    {content.genres.map((n, i) => {\n                      return (\n                        <p\n                          key={n.id}\n                          style={{ fontSize: \"13px\", marginLeft: \"6px\" }}\n                          className=\"mygenre\"\n                        >\n                          {i > 0 && \", \"}\n                          {n.name}\n                        </p>\n                      );\n                    })}\n                  </h5>\n\n                  <div className=\"videopage\">\n                    {content && (\n                      <SingleVideoPage trailer={video} title={content.title} />\n                    )}\n                  </div>\n                  <div className=\"tagline\">\n                    <h5>{content.tagline}</h5>\n                  </div>\n                  <div className=\"overview\">\n                    <p>{content.overview}</p>\n                  </div>\n                  <div className=\"other_lists\">\n                    <ul>\n                      <li>\n                        DURATION:{\" \"}\n                        <span>\n                          {mediaType === \"tv\"\n                            ? `${content.episode_run_time[0]} min episodes`\n                            : `${content.runtime} min`}\n                        </span>\n                      </li>\n                      {mediaType === \"tv\" ? (\n                        <li>\n                          SEASONS: <span>{content.number_of_seasons}</span>\n                        </li>\n                      ) : (\n                        \"\"\n                      )}\n\n                      <li>\n                        STUDIO:\n                        {content.production_companies.map((studio, i) => {\n                          return (\n                            <span key={studio.id}>\n                              {\" \"}\n                              {i > 0 && \",  \"}\n                              {studio.name}\n                            </span>\n                          );\n                        })}\n                      </li>\n                      {mediaType === \"movie\" ? (\n                        <li>\n                          RELEASE DATE: <span>{content.release_date}</span>\n                        </li>\n                      ) : (\n                        \"\"\n                      )}\n                      <li>\n                        STATUS: <span>{content.status}</span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n          <div className=\"all__cast px-5 pt-5\">\n            <div className=\"cast__title\">\n              <h2>Cast</h2>\n            </div>\n            <div>\n              <Carousel mediaType={mediaType} id={id} />\n            </div>\n          </div>\n          <div className=\"similar__shows\">\n            <div className=\"btn__title\">\n              <h5>You May Also Like </h5>\n            </div>\n            <div className=\"similar\">\n              {similarMovies &&\n                similarMovies.map((n) => (\n                  <SingleData key={n.id} {...n} mediaType=\"movie\" />\n                ))}\n            </div>\n          </div>\n        </>\n      ) : (\n        <div className=\"load_app\" style={{ height: \"500px\" }}>\n          <Myloader color={color} size={60} />\n          <p\n            className=\"pt-4 text-secondary text-loading\"\n            style={{ textTransform: \"capitalize\", fontSize: \"1rem\" }}\n          >\n            Loading Please Wait...\n          </p>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default SinglePage;\n"]},"metadata":{},"sourceType":"module"}