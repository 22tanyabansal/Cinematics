[{"C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\index.js":"1","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\App.js":"2","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\pages\\Errors\\NotFound.js":"3","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\config\\Routes\\Routes.jsx":"4","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\pages\\Movies\\Movies.js":"5","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\pages\\Home\\Home.js":"6","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\pages\\TreadingShows\\Treading.js":"7","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\CopyWrite__footer\\LastFooter.js":"8","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\pages\\TvSeries\\TvSeries.jsx":"9","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\SingleContentPage\\SinglePage.jsx":"10","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\Footer\\Footer.jsx":"11","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\MainNavbar\\BottomNav.jsx":"12","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\MainNavbar\\MainNav.jsx":"13","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\Genres\\UseGenre.js":"14","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\HomeNav\\HomeNav.js":"15","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\Genres\\Genre.js":"16","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\Search\\LocalSearch.jsx":"17","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\SingleData\\SingleData.jsx":"18","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\Pagination\\Pagination.jsx":"19","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\SingleContentPage\\SingleVideoPage.jsx":"20","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\Carousel\\Carousel.js":"21","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\Header\\Heading.jsx":"22","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\api\\config\\DefaultImages.jsx":"23"},{"size":167,"mtime":1677341261177,"results":"24","hashOfConfig":"25"},{"size":1197,"mtime":1677337343885,"results":"26","hashOfConfig":"25"},{"size":435,"mtime":1677341551798,"results":"27","hashOfConfig":"25"},{"size":1840,"mtime":1677336839019,"results":"28","hashOfConfig":"25"},{"size":4603,"mtime":1677341328702,"results":"29","hashOfConfig":"25"},{"size":4673,"mtime":1677341428763,"results":"30","hashOfConfig":"25"},{"size":2277,"mtime":1677341310457,"results":"31","hashOfConfig":"25"},{"size":679,"mtime":1677335981591,"results":"32","hashOfConfig":"25"},{"size":4557,"mtime":1677333481938,"results":"33","hashOfConfig":"25"},{"size":7830,"mtime":1677341636433,"results":"34","hashOfConfig":"25"},{"size":2658,"mtime":1677335777257,"results":"35","hashOfConfig":"25"},{"size":2443,"mtime":1677341743644,"results":"36","hashOfConfig":"25"},{"size":2662,"mtime":1677341757247,"results":"37","hashOfConfig":"25"},{"size":216,"mtime":1677333480047,"results":"38","hashOfConfig":"25"},{"size":1799,"mtime":1677341764824,"results":"39","hashOfConfig":"25"},{"size":2276,"mtime":1677341804442,"results":"40","hashOfConfig":"25"},{"size":1343,"mtime":1677341721352,"results":"41","hashOfConfig":"25"},{"size":1833,"mtime":1677341596397,"results":"42","hashOfConfig":"25"},{"size":1710,"mtime":1677333480391,"results":"43","hashOfConfig":"25"},{"size":2293,"mtime":1677341653577,"results":"44","hashOfConfig":"25"},{"size":1876,"mtime":1677333479735,"results":"45","hashOfConfig":"25"},{"size":240,"mtime":1677333480125,"results":"46","hashOfConfig":"25"},{"size":505,"mtime":1677333479500,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ynoe9r",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\index.js",[],"C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\App.js",[],"C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\pages\\Errors\\NotFound.js",[],"C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\config\\Routes\\Routes.jsx",[],"C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\pages\\Movies\\Movies.js",["100","101"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Pagination2 from \"../../components/Pagination/Pagination\";\nimport LocalSearch from \"../../components/Search/LocalSearch\";\nimport SingleData from \"../../components/SingleData/SingleData\";\nimport Myloader from \"react-spinners/PuffLoader\";\nimport Genre from \"../../components/Genres/Genre\";\nimport useGenre from \"../../components/Genres/UseGenre\";\n\nconst Movies = () => {\n  const [treadingContent, setTreadingContent] = useState([]);\n  const [page, setPage] = useState(1);\n  const [numOfPages, setNumOfPages] = useState();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [filterGenre, setFilterGenre] = useState([]);\n  const [genreTitle, setGenreTitle] = useState();\n  const [color, setColor] = useState(\"grey\");\n  const genreforURL = useGenre(filterGenre);\n\n  // fetch Movies from TMDB\n  const fetchMovieApi = async () => {\n    try {\n      const { data } = await axios.get(\n        ` \n      https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&page=${page}&language=en-US&sort_by=popularity.desc&with_genres=${genreforURL}\n      `\n      );\n      setTreadingContent(data.results);\n      setNumOfPages(100);\n      setIsLoading(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchSearchApi = async () => {\n    if (searchTerm) {\n      const SEARCH_API = `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_API_KEY}&query=${searchTerm}&page=${page}&sort_by=popularity.desc&page=2`;\n      const { data } = await axios.get(SEARCH_API);\n      setTreadingContent(data.results);\n      setNumOfPages(data.total_pages);\n      setIsLoading(true);\n    }\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    if (searchTerm) {\n      fetchSearchApi();\n    } else {\n      fetchMovieApi();\n    }\n    return () => {\n      setTreadingContent();\n    };\n  }, [page, isLoading, genreforURL]);\n\n  return (\n    <>\n      <main className=\"all__movies\">\n        <div className=\"my__main\">\n          <div className=\"TreadingHome\">\n            <h3>{genreTitle && genreTitle.name} Movies:</h3>\n          </div>\n          <LocalSearch\n            setSearchTerm={setSearchTerm}\n            searchTerm={searchTerm}\n            fetchSearchApi={fetchSearchApi}\n            numOfpages={numOfPages}\n            setIsLoading={setIsLoading}\n            media=\"movies\"\n            placehold=\"Search Movies\"\n            isLoading={isLoading}\n            treadingContent={treadingContent}\n          />\n        </div>\n        <div className=\"sec__main \">\n          <span className=\"all_genres \">\n            <Genre\n              media=\"movie\"\n              setFilterGenre={setFilterGenre}\n              filterGenre={filterGenre}\n              setTreadingContent={setTreadingContent}\n              setPage={setPage}\n              numOfpages={numOfPages}\n              page={page}\n              genreTitle={genreTitle}\n              setGenreTitle={setGenreTitle}\n              treadingContent={treadingContent}\n            />\n          </span>\n          <div className=\"pag  \">\n            {/* <Pagination2\n              setPage={setPage}\n              numOfPages={numOfPages}\n              media=\"movies\"\n              page={page}\n              setIsLoading={setIsLoading}\n              searchTerm={searchTerm}\n              style={{ marginBottom: \"10px\" }}\n            /> */}\n          </div>\n        </div>\n\n        <div className=\"ListContent\">\n          {isLoading && treadingContent ? (\n            treadingContent.map((n) => (\n              <SingleData key={n.id} {...n} mediaType=\"movie\" />\n            ))\n          ) : (\n            <div\n              className=\"loading  \"\n              style={{\n                display: \"flex\",\n                height: \"450px\",\n\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Myloader color={color} size={60} />\n              <p\n                style={{\n                  color: \"grey\",\n                  fontSize: \"13px\",\n                  marginLeft: \"10px\",\n                  marginTop: \"10px\",\n                }}\n              >\n                fetching data ...\n              </p>\n            </div>\n          )}\n        </div>\n        <Pagination2\n          setPage={setPage}\n          numOfPages={numOfPages}\n          media=\"movies\"\n          searchTerm={searchTerm}\n          setIsLoading={setIsLoading}\n          page={page}\n        />\n      </main>\n    </>\n  );\n};\n\nexport default Movies;\n","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\pages\\Home\\Home.js",["102"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport SingleData from \"../../components/SingleData/SingleData\";\nimport \"./Home.css\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"../../components/HomeNav/HomeNav\";\nimport Myloader from \"react-spinners/PuffLoader\";\n\nconst Home = () => {\n  const [allContent, setAllContent] = useState([]);\n  const [popularSeries, setPopularSeries] = useState([]);\n  const [topRated, setTopRated] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  let [color, setColor] = useState(\"grey\");\n\n  const fetchPopularMovieApi = async () => {\n    try {\n      const { data } = await axios.get(` \n     https://api.themoviedb.org/3/movie/now_playing?api_key=${process.env.REACT_APP_API_KEY}&page=1`);\n      const alldata = data.results;\n      const filter = alldata.slice(0, 7);\n      setAllContent(filter);\n      setIsLoading(true);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchPopularSeriesApi = async () => {\n    try {\n      const { data } = await axios.get(` \n      https://api.themoviedb.org/3/tv/on_the_air?api_key=${process.env.REACT_APP_API_KEY}&page=1`);\n      const alldata = data.results;\n      const filter = alldata.slice(0, 7);\n      setPopularSeries(filter);\n      setIsLoading(true);\n\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const fetchTopRatedApi = async () => {\n    try {\n      const { data } = await axios.get(` \n      https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.REACT_APP_API_KEY}&page=1`);\n      const alldata = data.results;\n      const filter = alldata.slice(0, 7);\n      setTopRated(filter);\n      setIsLoading(true);\n\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n\n    fetchPopularMovieApi();\n    fetchPopularSeriesApi();\n    fetchTopRatedApi();\n    return () => {\n      setPopularSeries();\n      setAllContent();\n    };\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <>\n          <div style={{ marginTop: \"-10px\" }} className=\"bg__home\">\n            <Navbar />\n          </div>\n          <div className=\"TreadingHome3 pt-4\">\n            <div className=\"title__home\">\n              <div className=\"btn__home\">\n                <h6>\n                  Movies On Air &#160;\n                  <span style={{ paddingTop: \"10px\" }}>&#11166;</span>\n                </h6>\n              </div>\n              <div className=\"view__more\">\n                <Link to=\"/all-movies\" style={{ textDecoration: \"none\" }}>\n                  <p>View more &#187;</p>\n                </Link>\n              </div>\n            </div>\n\n            <div className=\"ListContent2\">\n              {allContent &&\n                allContent.map((n) => (\n                  <SingleData key={n.id} {...n} mediaType=\"movie\" />\n                ))}\n            </div>\n          </div>\n          <hr />\n          <div className=\"TreadingHome3\">\n            <div className=\"title__home\">\n              <div className=\"btn__home\">\n                <h6>\n                  TvSeries On Air &#160;\n                  <span style={{ paddingTop: \"10px\" }}>&#11166;</span>\n                </h6>\n              </div>\n              <div className=\"view__more\">\n                <Link to=\"/all-series\" style={{ textDecoration: \"none\" }}>\n                  <p>View more &#187;</p>\n                </Link>\n              </div>\n            </div>\n            <div className=\"ListContent2\">\n              {popularSeries &&\n                popularSeries.map((n) => (\n                  <SingleData key={n.id} mediaType=\"tv\" {...n} />\n                ))}\n            </div>\n          </div>\n          <hr />\n          <div className=\"TreadingHome3\">\n            <div className=\"title__home\">\n              <div className=\"btn__home\" style={{ width: \"160px\" }}>\n                <h6>\n                  Top Rated &#160;\n                  <span style={{ paddingTop: \"10px\" }}>&#11166;</span>\n                </h6>\n              </div>\n              <div className=\"view__more\">\n                <Link to=\"/all-movies\" style={{ textDecoration: \"none\" }}>\n                  <p>View more &#187;</p>\n                </Link>\n              </div>\n            </div>\n            <div className=\"ListContent2\">\n              {topRated &&\n                topRated.map((n) => (\n                  <SingleData key={n.id} mediaType=\"movie\" {...n} />\n                ))}\n            </div>\n          </div>\n        </>\n      ) : (\n        <div className=\"major\" style={{ height: \"600px\" }}>\n          <Myloader color={color} size={60} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\pages\\TreadingShows\\Treading.js",["103","104"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport SingleData from \"../../components/SingleData/SingleData\";\nimport \"./TreadingHome.css\";\nimport \"./../PagesStyles.css\";\nimport Pagination from \"../../components/Pagination/Pagination\";\nimport Myloader from \"react-spinners/PuffLoader\";\n\nconst Treading = () => {\n  const [treadingContent, setTreadingContent] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  let [color, setColor] = useState(\"grey\");\n\n  const fetchTreadinApi = async () => {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=${process.env.REACT_APP_API_KEY}&page=${page}`\n    );\n    setTreadingContent(data.results);\n    setIsLoading(true);\n  };\n\n  useEffect(() => {\n    fetchTreadinApi();\n  }, [page]);\n\n  return (\n    <>\n      <main className=\"all__treads\">\n        <div className=\"my__main2  pt-5\">\n          <div\n            style={{ marginTop: \"0px\", color: \"white\" }}\n            className=\"TreadingHome\"\n          >\n            <h3> Treading Shows:</h3>\n          </div>\n          <Pagination\n            setPage={setPage}\n            page={page}\n            media=\"treading\"\n            numOfPages=\"3\"\n          />\n        </div>\n\n        <div className=\"ListContent2\">\n          {isLoading && treadingContent ? (\n            treadingContent.map((n) => <SingleData key={n.id} {...n} />)\n          ) : (\n            <div\n              className=\"loading  \"\n              style={{\n                display: \"flex\",\n                height: \"450px\",\n\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Myloader color={color} size={60} />\n              <p\n                style={{\n                  color: \"grey\",\n                  fontSize: \"13px\",\n                  marginLeft: \"10px\",\n                  marginTop: \"10px\",\n                }}\n              >\n                fetching data ...\n              </p>\n            </div>\n          )}\n        </div>\n        <Pagination\n          setPage={setPage}\n          page={page}\n          media=\"treading\"\n          numOfPages=\"3\"\n        />\n      </main>\n    </>\n  );\n};\n\nexport default Treading;\n","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\CopyWrite__footer\\LastFooter.js",[],"C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\pages\\TvSeries\\TvSeries.jsx",[],"C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\SingleContentPage\\SinglePage.jsx",["105","106"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { img_300, img_500, unavailable } from \"../../api/config/DefaultImages\";\nimport SingleData from \"../SingleData/SingleData\";\nimport \"./SinglePage.css\";\nimport SingleVideoPage from \"./SingleVideoPage\";\nimport Myloader from \"react-spinners/ClipLoader\";\n\nimport Carousel from \"../Carousel/Carousel\";\nimport $ from \"jquery\";\n\nconst SinglePage = () => {\n  $(function () {\n    $(\".ico\").on(\"click\", function () {\n      $(\".ico\").toggleClass(\"press\", 1000);\n    });\n  });\n  const [content, setContent] = useState();\n  const [similarMovies, setSimilarMovies] = useState();\n  const [video, setVideo] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [color, setColor] = useState(\"grey\");\n  const history = useHistory();\n  const { id, mediaType } = useParams();\n\n  const fetchData = async () => {\n    try {\n      const { data } = await axios.get(` \n      https://api.themoviedb.org/3/${mediaType}/${id}?api_key=${process.env.REACT_APP_API_KEY}&page=1`);\n      setContent(data);\n      setIsLoading(true);\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        history.replace(\"/error\");\n      }\n    }\n  };\n  const fetchSimilarMovies = async () => {\n    try {\n      const { data } = await axios.get(` \n     https://api.themoviedb.org/3/${mediaType}/${id}/similar?api_key=${process.env.REACT_APP_API_KEY}`);\n      const dataSlice = data.results;\n      const filter = dataSlice.slice(0, 7);\n      setSimilarMovies(filter);\n      setIsLoading(true);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchVideos = async () => {\n    try {\n      const { data } = await axios.get(` \n     https://api.themoviedb.org/3/${mediaType}/${id}/videos?api_key=${process.env.REACT_APP_API_KEY}`);\n\n      setVideo(data.results[0].key);\n      setIsLoading(true);\n\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    window.scroll(0, 0);\n\n    fetchData();\n    fetchSimilarMovies();\n    fetchVideos();\n\n  }, [id, setContent]);\n  return (\n    <>\n      {isLoading ? (\n        <>\n          <div>\n            {content && (\n              <div\n                className=\"open__modal\"\n                style={{\n                  backgroundImage: `url( https://www.themoviedb.org/t/p/w1920_and_h800_multi_faces/${content.backdrop_path})`,\n                }}\n              >\n                <img\n                  className=\"poster__img\"\n                  src={\n                    content.poster_path\n                      ? `${img_300}/${content.poster_path}`\n                      : unavailable\n                  }\n                  alt=\"\"\n                />\n                <img\n                  className=\"backdrop__img\"\n                  src={\n                    content.backdrop_path\n                      ? `${img_500}/${content.backdrop_path}`\n                      : unavailable\n                  }\n                  alt=\"\"\n                />\n\n                <div className=\"open__detailsPage\">\n                  <h3>{content.original_title || content.name}</h3>\n                  <div\n                    style={{\n                      zIndex: \"1000\",\n                      marginTop: \"10px\",\n                      textAlign: \"left\",\n                    }}\n                    className=\"year\"\n                  >\n                    {(\n                      content.first_air_date ||\n                      content.release_date ||\n                      \"-----\"\n                    ).substring(0, 4)}{\" \"}\n                    .\n                    <b className=\"title_me\">\n                      {mediaType === \"tv\" ? \"Tv Series .\" : \"Movie .\"}\n                    </b>\n                    <b className=\"vote_back\">\n                      <b className=\"tmdb\">TMDB</b>\n                      <b className=\"vote_ave\">-⭐{content.vote_average}</b>\n                    </b>\n                  </div>\n                  <h5\n                    style={{\n                      display: \"flex\",\n                      fontSize: \"12px\",\n                    }}\n                    className=\"genreList\"\n                  >\n                    {content.genres.map((n, i) => {\n                      return (\n                        <p\n                          key={n.id}\n                          style={{ fontSize: \"13px\", marginLeft: \"6px\" }}\n                          className=\"mygenre\"\n                        >\n                          {i > 0 && \", \"}\n                          {n.name}\n                        </p>\n                      );\n                    })}\n                  </h5>\n\n                  <div className=\"videopage\">\n                    {content && (\n                      <SingleVideoPage trailer={video} title={content.title} />\n                    )}\n                  </div>\n                  <div className=\"tagline\">\n                    <h5>{content.tagline}</h5>\n                  </div>\n                  <div className=\"overview\">\n                    <p>{content.overview}</p>\n                  </div>\n                  <div className=\"other_lists\">\n                    <ul>\n                      <li>\n                        DURATION:{\" \"}\n                        <span>\n                          {mediaType === \"tv\"\n                            ? `${content.episode_run_time[0]} min episodes`\n                            : `${content.runtime} min`}\n                        </span>\n                      </li>\n                      {mediaType === \"tv\" ? (\n                        <li>\n                          SEASONS: <span>{content.number_of_seasons}</span>\n                        </li>\n                      ) : (\n                        \"\"\n                      )}\n\n                      <li>\n                        STUDIO:\n                        {content.production_companies.map((studio, i) => {\n                          return (\n                            <span key={studio.id}>\n                              {\" \"}\n                              {i > 0 && \",  \"}\n                              {studio.name}\n                            </span>\n                          );\n                        })}\n                      </li>\n                      {mediaType === \"movie\" ? (\n                        <li>\n                          RELEASE DATE: <span>{content.release_date}</span>\n                        </li>\n                      ) : (\n                        \"\"\n                      )}\n                      <li>\n                        STATUS: <span>{content.status}</span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n          <div className=\"all__cast px-5 pt-5\">\n            <div className=\"cast__title\">\n              <h2>Cast</h2>\n            </div>\n            <div>\n              <Carousel mediaType={mediaType} id={id} />\n            </div>\n          </div>\n          <div className=\"similar__shows\">\n            <div className=\"btn__title\">\n              <h5>You May Also Like </h5>\n            </div>\n            <div className=\"similar\">\n              {similarMovies &&\n                similarMovies.map((n) => (\n                  <SingleData key={n.id} {...n} mediaType=\"movie\" />\n                ))}\n            </div>\n          </div>\n        </>\n      ) : (\n        <div className=\"load_app\" style={{ height: \"500px\" }}>\n          <Myloader color={color} size={60} />\n          <p\n            className=\"pt-4 text-secondary text-loading\"\n            style={{ textTransform: \"capitalize\", fontSize: \"1rem\" }}\n          >\n            Loading Please Wait...\n          </p>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default SinglePage;\n","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\MainNavbar\\BottomNav.jsx",[],"C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\MainNavbar\\MainNav.jsx",[],"C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\Genres\\UseGenre.js",[],"C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\HomeNav\\HomeNav.js",[],"C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\Genres\\Genre.js",["107"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport \"./Genres.css\";\n\nconst Genre = ({\n  media,\n  setFilterGenre,\n  setPage,\n  genreTitle,\n  setGenreTitle,\n  setTreadingContent,\n  treadingContent,\n  handleRedirect,\n}) => {\n  const [getGenre, setGetGenre] = useState([]);\n  const navigate = useHistory();\n  const fetchGenres = async () => {\n    try {\n      if (media) {\n        const { data } = await axios.get(\n          `https://api.themoviedb.org/3/genre/${media}/list?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n        );\n        setGetGenre(data.genres);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleFilter = (genre) => {\n    setFilterGenre([genre]);\n    setPage(1);\n    setGenreTitle(genre);\n    if (media === \"tv\") {\n      navigate.push(`/${media}=series${genre.id}-Category`);\n    } else if (media === \"movie\") {\n      navigate.push(`/${media}-${genre.name}-Category`);\n    } else if (!media) {\n      navigate.push(\"/all-movies\");\n    }\n  };\n\n  useEffect(() => {\n    fetchGenres();\n    return () => {\n      setGetGenre();\n    };\n  }, []);\n\n  return (\n    <>\n      <div className=\"dropdown\" style={{ position: \"relative \" }}>\n        <Link\n          className=\"btn btn-secondary dropdown-toggle mybtn\"\n          to=\"#\"\n          role=\"button\"\n          id=\"dropdownMenuLink\"\n          data-toggle=\"dropdown\"\n          aria-expanded=\"false\"\n        >\n          Filter By:{\" \"}\n        </Link>\n\n        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n          <div className=\"title__genre\">Categories</div>\n\n          <div className=\"category__content\">\n            <p className=\"dropdown-item3\" onClick={handleFilter}>\n              all {media === \"movie\" ? \"Movies\" : \"Tv series\"}\n            </p>\n            {getGenre &&\n              getGenre.map((genre) => (\n                <p\n                  key={genre.id}\n                  onClick={() => handleFilter(genre)}\n                  className=\"dropdown-item2\"\n                >\n                  {genre.name}\n                </p>\n              ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Genre;\n","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\Search\\LocalSearch.jsx",["108","109"],"import * as React from \"react\";\nimport \"./LocalSearch.css\";\nimport \"./../../pages/PagesStyles.css\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\n\nexport default function LocalSearch({ setSearchTerm, fetchSearchApi }) {\n  const [page, setPage] = useState(1);\n  const darkTheme = createTheme({\n    palette: {\n      type: \"dark\",\n      primary: {\n        main: \"#abb7c4;\",\n      },\n    },\n  });\n\n  const handleSearch = () => {\n    fetchSearchApi();\n  };\n  const handleChange = (e) => {\n    e.preventDefault();\n    setSearchTerm(e.target.value);\n  };\n  useEffect(() => {\n    fetchSearchApi();\n\n    return () => {};\n  }, [page]);\n  return (\n    <>\n      <ThemeProvider theme={darkTheme}>\n        <div className=\"search\">\n          <div className=\"form_search\">\n            <input\n              type=\"search\"\n              placeholder=\"Search Movies Here ...\"\n              onChange={handleChange}\n            />\n            <SearchIcon className=\"icon\" label=\"ss\" />\n            <div\n              className=\"btn btn-primary brn-sm search__icon\"\n              onClick={handleSearch}\n            >\n              Search\n            </div>\n          </div>\n        </div>\n      </ThemeProvider>\n    </>\n  );\n}\n","C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\SingleData\\SingleData.jsx",[],"C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\Pagination\\Pagination.jsx",[],"C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\SingleContentPage\\SingleVideoPage.jsx",[],"C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\Carousel\\Carousel.js",[],"C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\components\\Header\\Heading.jsx",[],"C:\\Users\\Dell\\Downloads\\React-Movie-App-main\\React-Movie-App-main\\src\\api\\config\\DefaultImages.jsx",[],{"ruleId":"110","severity":1,"message":"111","line":18,"column":17,"nodeType":"112","messageId":"113","endLine":18,"endColumn":25},{"ruleId":"114","severity":1,"message":"115","line":57,"column":6,"nodeType":"116","endLine":57,"endColumn":36,"suggestions":"117"},{"ruleId":"110","severity":1,"message":"111","line":14,"column":15,"nodeType":"112","messageId":"113","endLine":14,"endColumn":23},{"ruleId":"110","severity":1,"message":"111","line":13,"column":15,"nodeType":"112","messageId":"113","endLine":13,"endColumn":23},{"ruleId":"114","severity":1,"message":"118","line":25,"column":6,"nodeType":"116","endLine":25,"endColumn":12,"suggestions":"119"},{"ruleId":"110","severity":1,"message":"111","line":23,"column":17,"nodeType":"112","messageId":"113","endLine":23,"endColumn":25},{"ruleId":"114","severity":1,"message":"120","line":71,"column":6,"nodeType":"116","endLine":71,"endColumn":22,"suggestions":"121"},{"ruleId":"114","severity":1,"message":"122","line":50,"column":6,"nodeType":"116","endLine":50,"endColumn":8,"suggestions":"123"},{"ruleId":"110","severity":1,"message":"124","line":10,"column":16,"nodeType":"112","messageId":"113","endLine":10,"endColumn":23},{"ruleId":"114","severity":1,"message":"125","line":31,"column":6,"nodeType":"116","endLine":31,"endColumn":12,"suggestions":"126"},"no-unused-vars","'setColor' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchMovieApi', 'fetchSearchApi', and 'searchTerm'. Either include them or remove the dependency array.","ArrayExpression",["127"],"React Hook useEffect has a missing dependency: 'fetchTreadinApi'. Either include it or remove the dependency array.",["128"],"React Hook useEffect has missing dependencies: 'fetchData', 'fetchSimilarMovies', and 'fetchVideos'. Either include them or remove the dependency array.",["129"],"React Hook useEffect has a missing dependency: 'fetchGenres'. Either include it or remove the dependency array.",["130"],"'setPage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchSearchApi'. Either include it or remove the dependency array. If 'fetchSearchApi' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["131"],{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [page, isLoading, genreforURL, searchTerm, fetchSearchApi, fetchMovieApi]",{"range":"142","text":"143"},"Update the dependencies array to be: [fetchTreadinApi, page]",{"range":"144","text":"145"},"Update the dependencies array to be: [fetchData, fetchSimilarMovies, fetchVideos, id, setContent]",{"range":"146","text":"147"},"Update the dependencies array to be: [fetchGenres]",{"range":"148","text":"149"},"Update the dependencies array to be: [fetchSearchApi, page]",{"range":"150","text":"151"},[1963,1993],"[page, isLoading, genreforURL, searchTerm, fetchSearchApi, fetchMovieApi]",[846,852],"[fetchTreadinApi, page]",[2133,2149],"[fetchData, fetchSimilarMovies, fetchVideos, id, setContent]",[1205,1207],"[fetchGenres]",[757,763],"[fetchSearchApi, page]"]